# VoxelGamesLib Documentation

## Introduction

Welcome to the VoxelGamesLib documentation.

VoxelGamesLib is a powerful, feature-packed, abstract and expandable Minecraft minigames framework.  
It aims to make to easy for developers, admins and users to create, run and play minigames at scale.

### For Game Developers
Game Developers will make use of the modular apis VGL offers to make creating minigames pain free and allow
them to focus on whats important: the gameplay. The structure of VGL allows developers to easily write many games
without duplicating any code.

### For Game Designers
Game Designers do not need to know how to write java, they can modify existing games just by editing values 
in a json file. That allows game designers to quickly try out new things without relying on a game developer.
They can even make completly new games, just by combinding and configuring existing features.

### For Map Builders
Map Builders will enojy how easy it is to setup maps for VGL. They can setup their maps right from the game, marking
important locations (spawns, chests, drop points...) via skulls. VGL also allows you to easily iterate over the map, making
changes to the world or the markers very easy.

### For Server Admins
Server Admins will like that VGL supports endless relational databases thanks to our choice of hibernate as our DB framework.
That means you can use whatever DB fits best into your enviroment. VGL also makes managing maps easy as they come in a (configurable) 
git repo by default. 

### For Players
VGL will allow players to easily play their favorite minigames, with support for stuff like ELO based skill tracking and
extensive stats tracking. They will also like that you have a seamless integration, every game UX is the same, making it
easy to learn new modes.
  
  
To sum it up: we care about every user of this framework, from the game developers up to the end users, and aim to provide the 
best experience possible for everyone. 

## About this documentation

This documentation is targeted at all kind of users of this framework.  
You can find general information in the [General](/general/getting-started) section.  
Map makers will find the [Maps](/maps/introduction) section useful.  
If you want to build your own gamemode (either via the game definition files or via code) you might
find the list of components useful, you can find it [here](/components/general).  
That section also contains a [list of gamemodes](/components/games) other developers created.  
If you are a developer and plan on writing your own features, phases or games you will find the 
[developer area](/developer-area/how-to-write-a-feature) useful.  
If you want to help out the project in any way (no coding required!) you can take a look at the
[contributor area](/contributor-area/general) to find out who you can help.
